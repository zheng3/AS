/*
 * Copyright (c) 2000-2005 Regents of the University of California.
 * All rights reserved.
 *
 * This software was developed at the University of California, Irvine.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Irvine.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */
package edu.uci.isr.xarch.messages;

import java.util.*;

import edu.uci.isr.xarch.*;

import org.w3c.dom.*;

import edu.uci.isr.xarch.IXArch;
import edu.uci.isr.xarch.IXArchContext;

/**
 * The context interface for the messages package.
 * This interface is used to create objects that are used
 * in the messages namespace.
 *
 * @author Automatically Generated by xArch apigen
 */
public interface IMessagesContext extends IXArchContext{

	/**
	 * Create an IKind object in this namespace.
	 * @return New IKind object.
	 */
	public IKind createKind();

	/**
	 * Brings an IKind object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IKind recontextualizeKind(IKind value);

	/**
	 * Create an IRuleSpecification object in this namespace.
	 * @return New IRuleSpecification object.
	 */
	public IRuleSpecification createRuleSpecification();

	/**
	 * Brings an IRuleSpecification object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IRuleSpecification recontextualizeRuleSpecification(IRuleSpecification value);

	/**
	 * Create an edu.uci.isr.xarch.instance.IDescription object in this namespace.
	 * @return New edu.uci.isr.xarch.instance.IDescription object.
	 */
	public edu.uci.isr.xarch.instance.IDescription createDescription();

	/**
	 * Brings an edu.uci.isr.xarch.instance.IDescription object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public edu.uci.isr.xarch.instance.IDescription recontextualizeDescription(edu.uci.isr.xarch.instance.IDescription value);

	/**
	 * Create an IProductionRule object in this namespace.
	 * @return New IProductionRule object.
	 */
	public IProductionRule createProductionRule();

	/**
	 * Brings an IProductionRule object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IProductionRule recontextualizeProductionRule(IProductionRule value);

	/**
	 * Create an IVariantComponentTypeImplVersSpec object in this namespace.
	 * @return New IVariantComponentTypeImplVersSpec object.
	 */
	public IVariantComponentTypeImplVersSpec createVariantComponentTypeImplVersSpec();

	/**
	 * Brings an IVariantComponentTypeImplVersSpec object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IVariantComponentTypeImplVersSpec recontextualizeVariantComponentTypeImplVersSpec(IVariantComponentTypeImplVersSpec value);

	/**
	 * Promote an object of type <code>edu.uci.isr.xarch.versions.IVariantComponentTypeImplVers</code>
	 * to one of type <code>IVariantComponentTypeImplVersSpec</code>.  xArch APIs
	 * are structured in such a way that a regular cast is not possible
	 * to change interface types, so casting must be done through these
	 * promotion functions.  If the <code>edu.uci.isr.xarch.versions.IVariantComponentTypeImplVers</code>
	 * object wraps a DOM element that is the base type, then the 
	 * <code>xsi:type</code> of the base element is promoted.  Otherwise, 
	 * it is left unchanged.
	 *
	 * This function also emits an <CODE>XArchEvent</CODE> with type
	 * PROMOTE_TYPE.  The source for this events is the pre-promoted
	 * IXArchElement object (should no longer be used), and the
	 * target is the post-promotion object.  The target name is
	 * the name of the interface class that was the target of the
	 * promotion.
	 * 
	 * @param value Object to promote.
	 * @return Promoted object.
	 */
	public IVariantComponentTypeImplVersSpec promoteToVariantComponentTypeImplVersSpec(
	edu.uci.isr.xarch.versions.IVariantComponentTypeImplVers value);

	/**
	 * Create an IVariantConnectorTypeImplVersSpec object in this namespace.
	 * @return New IVariantConnectorTypeImplVersSpec object.
	 */
	public IVariantConnectorTypeImplVersSpec createVariantConnectorTypeImplVersSpec();

	/**
	 * Brings an IVariantConnectorTypeImplVersSpec object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IVariantConnectorTypeImplVersSpec recontextualizeVariantConnectorTypeImplVersSpec(IVariantConnectorTypeImplVersSpec value);

	/**
	 * Promote an object of type <code>edu.uci.isr.xarch.versions.IVariantConnectorTypeImplVers</code>
	 * to one of type <code>IVariantConnectorTypeImplVersSpec</code>.  xArch APIs
	 * are structured in such a way that a regular cast is not possible
	 * to change interface types, so casting must be done through these
	 * promotion functions.  If the <code>edu.uci.isr.xarch.versions.IVariantConnectorTypeImplVers</code>
	 * object wraps a DOM element that is the base type, then the 
	 * <code>xsi:type</code> of the base element is promoted.  Otherwise, 
	 * it is left unchanged.
	 *
	 * This function also emits an <CODE>XArchEvent</CODE> with type
	 * PROMOTE_TYPE.  The source for this events is the pre-promoted
	 * IXArchElement object (should no longer be used), and the
	 * target is the post-promotion object.  The target name is
	 * the name of the interface class that was the target of the
	 * promotion.
	 * 
	 * @param value Object to promote.
	 * @return Promoted object.
	 */
	public IVariantConnectorTypeImplVersSpec promoteToVariantConnectorTypeImplVersSpec(
	edu.uci.isr.xarch.versions.IVariantConnectorTypeImplVers value);

	/**
	 * Create an IMessageCausalitySpecification object in this namespace.
	 * @return New IMessageCausalitySpecification object.
	 */
	public IMessageCausalitySpecification createMessageCausalitySpecification();

	/**
	 * Brings an IMessageCausalitySpecification object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IMessageCausalitySpecification recontextualizeMessageCausalitySpecification(IMessageCausalitySpecification value);

	/**
	 * Create an edu.uci.isr.xarch.instance.IXMLLink object in this namespace.
	 * @return New edu.uci.isr.xarch.instance.IXMLLink object.
	 */
	public edu.uci.isr.xarch.instance.IXMLLink createXMLLink();

	/**
	 * Brings an edu.uci.isr.xarch.instance.IXMLLink object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public edu.uci.isr.xarch.instance.IXMLLink recontextualizeXMLLink(edu.uci.isr.xarch.instance.IXMLLink value);

	/**
	 * Create an IGenericMessage object in this namespace.
	 * @return New IGenericMessage object.
	 */
	public IGenericMessage createGenericMessage();

	/**
	 * Brings an IGenericMessage object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IGenericMessage recontextualizeGenericMessage(IGenericMessage value);

	/**
	 * Create an INamedPropertyMessage object in this namespace.
	 * @return New INamedPropertyMessage object.
	 */
	public INamedPropertyMessage createNamedPropertyMessage();

	/**
	 * Brings an INamedPropertyMessage object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public INamedPropertyMessage recontextualizeNamedPropertyMessage(INamedPropertyMessage value);

	/**
	 * Promote an object of type <code>IGenericMessage</code>
	 * to one of type <code>INamedPropertyMessage</code>.  xArch APIs
	 * are structured in such a way that a regular cast is not possible
	 * to change interface types, so casting must be done through these
	 * promotion functions.  If the <code>IGenericMessage</code>
	 * object wraps a DOM element that is the base type, then the 
	 * <code>xsi:type</code> of the base element is promoted.  Otherwise, 
	 * it is left unchanged.
	 *
	 * This function also emits an <CODE>XArchEvent</CODE> with type
	 * PROMOTE_TYPE.  The source for this events is the pre-promoted
	 * IXArchElement object (should no longer be used), and the
	 * target is the post-promotion object.  The target name is
	 * the name of the interface class that was the target of the
	 * promotion.
	 * 
	 * @param value Object to promote.
	 * @return Promoted object.
	 */
	public INamedPropertyMessage promoteToNamedPropertyMessage(
	IGenericMessage value);

	/**
	 * Create an ICount object in this namespace.
	 * @return New ICount object.
	 */
	public ICount createCount();

	/**
	 * Brings an ICount object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public ICount recontextualizeCount(ICount value);

	/**
	 * Create an IMessageName object in this namespace.
	 * @return New IMessageName object.
	 */
	public IMessageName createMessageName();

	/**
	 * Brings an IMessageName object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IMessageName recontextualizeMessageName(IMessageName value);

	/**
	 * Create an IMessageType object in this namespace.
	 * @return New IMessageType object.
	 */
	public IMessageType createMessageType();

	/**
	 * Brings an IMessageType object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IMessageType recontextualizeMessageType(IMessageType value);

	/**
	 * Create an ICauseTime object in this namespace.
	 * @return New ICauseTime object.
	 */
	public ICauseTime createCauseTime();

	/**
	 * Brings an ICauseTime object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public ICauseTime recontextualizeCauseTime(ICauseTime value);

	/**
	 * Create an INamedProperty object in this namespace.
	 * @return New INamedProperty object.
	 */
	public INamedProperty createNamedProperty();

	/**
	 * Brings an INamedProperty object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public INamedProperty recontextualizeNamedProperty(INamedProperty value);

	/**
	 * Create an IPropertyName object in this namespace.
	 * @return New IPropertyName object.
	 */
	public IPropertyName createPropertyName();

	/**
	 * Brings an IPropertyName object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IPropertyName recontextualizePropertyName(IPropertyName value);

	/**
	 * Create an IPropertyValue object in this namespace.
	 * @return New IPropertyValue object.
	 */
	public IPropertyValue createPropertyValue();

	/**
	 * Brings an IPropertyValue object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IPropertyValue recontextualizePropertyValue(IPropertyValue value);

	/**
	 * Create a top-level element of type <code>IRuleSpecification</code>.
	 * This function should be used in lieu of <code>createRuleSpecification</code>
	 * if the element is to be added as a sub-object of <code>IXArch</code>.
	 * @return new IRuleSpecification suitable for adding
	 * as a child of xArch.
	 */
	public IRuleSpecification createRuleSpecificationElement();

	/**
	 * Gets the IRuleSpecification child from the given <code>IXArch</code>
	 * element.  If there are multiple matching children, this returns the first one.
	 * @param xArch <code>IXArch</code> object from which to get the child.
	 * @return <code>IRuleSpecification</code> that is the child
	 * of <code>xArch</code> or <code>null</code> if no such object exists.
	 */
	public IRuleSpecification getRuleSpecification(IXArch xArch);

	/**
	 * Gets all the IRuleSpecification children from the given 
	 * <code>IXArch</code> element.
	 * @param xArch <code>IXArch</code> object from which to get the children.
	 * @return Collection of <code>IRuleSpecification</code> that are 	
	 * the children of <code>xArch</code> or an empty collection if no such object exists.
	 */
	public Collection getAllRuleSpecifications(IXArch xArch);


	public final static XArchTypeMetadata TYPE_METADATA = new XArchTypeMetadata(
		XArchTypeMetadata.XARCH_CONTEXT,
		"messages", null, null,
		new XArchPropertyMetadata[]{},
		new XArchActionMetadata[]{
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IKind.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IKind.TYPE_METADATA, IKind.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IRuleSpecification.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IRuleSpecification.TYPE_METADATA, IRuleSpecification.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, edu.uci.isr.xarch.instance.IDescription.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, edu.uci.isr.xarch.instance.IDescription.TYPE_METADATA, edu.uci.isr.xarch.instance.IDescription.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IProductionRule.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IProductionRule.TYPE_METADATA, IProductionRule.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IVariantComponentTypeImplVersSpec.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IVariantComponentTypeImplVersSpec.TYPE_METADATA, IVariantComponentTypeImplVersSpec.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.PROMOTE, edu.uci.isr.xarch.versions.IVariantComponentTypeImplVers.TYPE_METADATA, IVariantComponentTypeImplVersSpec.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IVariantConnectorTypeImplVersSpec.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IVariantConnectorTypeImplVersSpec.TYPE_METADATA, IVariantConnectorTypeImplVersSpec.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.PROMOTE, edu.uci.isr.xarch.versions.IVariantConnectorTypeImplVers.TYPE_METADATA, IVariantConnectorTypeImplVersSpec.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IMessageCausalitySpecification.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IMessageCausalitySpecification.TYPE_METADATA, IMessageCausalitySpecification.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, edu.uci.isr.xarch.instance.IXMLLink.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, edu.uci.isr.xarch.instance.IXMLLink.TYPE_METADATA, edu.uci.isr.xarch.instance.IXMLLink.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IGenericMessage.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IGenericMessage.TYPE_METADATA, IGenericMessage.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, INamedPropertyMessage.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, INamedPropertyMessage.TYPE_METADATA, INamedPropertyMessage.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.PROMOTE, IGenericMessage.TYPE_METADATA, INamedPropertyMessage.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, ICount.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, ICount.TYPE_METADATA, ICount.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IMessageName.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IMessageName.TYPE_METADATA, IMessageName.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IMessageType.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IMessageType.TYPE_METADATA, IMessageType.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, ICauseTime.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, ICauseTime.TYPE_METADATA, ICauseTime.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, INamedProperty.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, INamedProperty.TYPE_METADATA, INamedProperty.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IPropertyName.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IPropertyName.TYPE_METADATA, IPropertyName.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IPropertyValue.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IPropertyValue.TYPE_METADATA, IPropertyValue.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE_ELEMENT, null, IRuleSpecification.TYPE_METADATA)});

}

