/*
 * Copyright (c) 2000-2005 Regents of the University of California.
 * All rights reserved.
 *
 * This software was developed at the University of California, Irvine.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Irvine.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */
package edu.uci.isr.xarch.instance;

import java.util.*;

import edu.uci.isr.xarch.*;

import org.w3c.dom.*;

import edu.uci.isr.xarch.IXArch;
import edu.uci.isr.xarch.IXArchContext;

/**
 * The context interface for the instance package.
 * This interface is used to create objects that are used
 * in the instance namespace.
 *
 * @author Automatically Generated by xArch apigen
 */
public interface IInstanceContext extends IXArchContext{

	/**
	 * Create an IIdentifier object in this namespace.
	 * @return New IIdentifier object.
	 */
	public IIdentifier createIdentifier();

	/**
	 * Brings an IIdentifier object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IIdentifier recontextualizeIdentifier(IIdentifier value);

	/**
	 * Create an IDirectionSimpleType object in this namespace.
	 * @return New IDirectionSimpleType object.
	 */
	public IDirectionSimpleType createDirectionSimpleType();

	/**
	 * Brings an IDirectionSimpleType object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IDirectionSimpleType recontextualizeDirectionSimpleType(IDirectionSimpleType value);

	/**
	 * Create an IDescription object in this namespace.
	 * @return New IDescription object.
	 */
	public IDescription createDescription();

	/**
	 * Brings an IDescription object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IDescription recontextualizeDescription(IDescription value);

	/**
	 * Create an IDirection object in this namespace.
	 * @return New IDirection object.
	 */
	public IDirection createDirection();

	/**
	 * Brings an IDirection object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IDirection recontextualizeDirection(IDirection value);

	/**
	 * Create an IXMLLink object in this namespace.
	 * @return New IXMLLink object.
	 */
	public IXMLLink createXMLLink();

	/**
	 * Brings an IXMLLink object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IXMLLink recontextualizeXMLLink(IXMLLink value);

	/**
	 * Create an IInterfaceInstance object in this namespace.
	 * @return New IInterfaceInstance object.
	 */
	public IInterfaceInstance createInterfaceInstance();

	/**
	 * Brings an IInterfaceInstance object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IInterfaceInstance recontextualizeInterfaceInstance(IInterfaceInstance value);

	/**
	 * Create an IComponentInstance object in this namespace.
	 * @return New IComponentInstance object.
	 */
	public IComponentInstance createComponentInstance();

	/**
	 * Brings an IComponentInstance object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IComponentInstance recontextualizeComponentInstance(IComponentInstance value);

	/**
	 * Create an IConnectorInstance object in this namespace.
	 * @return New IConnectorInstance object.
	 */
	public IConnectorInstance createConnectorInstance();

	/**
	 * Brings an IConnectorInstance object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IConnectorInstance recontextualizeConnectorInstance(IConnectorInstance value);

	/**
	 * Create an IPoint object in this namespace.
	 * @return New IPoint object.
	 */
	public IPoint createPoint();

	/**
	 * Brings an IPoint object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IPoint recontextualizePoint(IPoint value);

	/**
	 * Create an ILinkInstance object in this namespace.
	 * @return New ILinkInstance object.
	 */
	public ILinkInstance createLinkInstance();

	/**
	 * Brings an ILinkInstance object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public ILinkInstance recontextualizeLinkInstance(ILinkInstance value);

	/**
	 * Create an IGroup object in this namespace.
	 * @return New IGroup object.
	 */
	public IGroup createGroup();

	/**
	 * Brings an IGroup object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IGroup recontextualizeGroup(IGroup value);

	/**
	 * Create an IInterfaceInstanceMapping object in this namespace.
	 * @return New IInterfaceInstanceMapping object.
	 */
	public IInterfaceInstanceMapping createInterfaceInstanceMapping();

	/**
	 * Brings an IInterfaceInstanceMapping object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IInterfaceInstanceMapping recontextualizeInterfaceInstanceMapping(IInterfaceInstanceMapping value);

	/**
	 * Create an ISubArchitecture object in this namespace.
	 * @return New ISubArchitecture object.
	 */
	public ISubArchitecture createSubArchitecture();

	/**
	 * Brings an ISubArchitecture object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public ISubArchitecture recontextualizeSubArchitecture(ISubArchitecture value);

	/**
	 * Create an IArchInstance object in this namespace.
	 * @return New IArchInstance object.
	 */
	public IArchInstance createArchInstance();

	/**
	 * Brings an IArchInstance object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IArchInstance recontextualizeArchInstance(IArchInstance value);

	/**
	 * Create a top-level element of type <code>IArchInstance</code>.
	 * This function should be used in lieu of <code>createArchInstance</code>
	 * if the element is to be added as a sub-object of <code>IXArch</code>.
	 * @return new IArchInstance suitable for adding
	 * as a child of xArch.
	 */
	public IArchInstance createArchInstanceElement();

	/**
	 * Gets the IArchInstance child from the given <code>IXArch</code>
	 * element.  If there are multiple matching children, this returns the first one.
	 * @param xArch <code>IXArch</code> object from which to get the child.
	 * @return <code>IArchInstance</code> that is the child
	 * of <code>xArch</code> or <code>null</code> if no such object exists.
	 */
	public IArchInstance getArchInstance(IXArch xArch);

	/**
	 * Gets all the IArchInstance children from the given 
	 * <code>IXArch</code> element.
	 * @param xArch <code>IXArch</code> object from which to get the children.
	 * @return Collection of <code>IArchInstance</code> that are 	
	 * the children of <code>xArch</code> or an empty collection if no such object exists.
	 */
	public Collection getAllArchInstances(IXArch xArch);


	public final static XArchTypeMetadata TYPE_METADATA = new XArchTypeMetadata(
		XArchTypeMetadata.XARCH_CONTEXT,
		"instance", null, null,
		new XArchPropertyMetadata[]{},
		new XArchActionMetadata[]{
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IIdentifier.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IIdentifier.TYPE_METADATA, IIdentifier.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IDirectionSimpleType.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IDirectionSimpleType.TYPE_METADATA, IDirectionSimpleType.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IDescription.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IDescription.TYPE_METADATA, IDescription.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IDirection.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IDirection.TYPE_METADATA, IDirection.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IXMLLink.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IXMLLink.TYPE_METADATA, IXMLLink.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IInterfaceInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IInterfaceInstance.TYPE_METADATA, IInterfaceInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IComponentInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IComponentInstance.TYPE_METADATA, IComponentInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IConnectorInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IConnectorInstance.TYPE_METADATA, IConnectorInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IPoint.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IPoint.TYPE_METADATA, IPoint.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, ILinkInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, ILinkInstance.TYPE_METADATA, ILinkInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IGroup.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IGroup.TYPE_METADATA, IGroup.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IInterfaceInstanceMapping.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IInterfaceInstanceMapping.TYPE_METADATA, IInterfaceInstanceMapping.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, ISubArchitecture.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, ISubArchitecture.TYPE_METADATA, ISubArchitecture.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IArchInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IArchInstance.TYPE_METADATA, IArchInstance.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE_ELEMENT, null, IArchInstance.TYPE_METADATA)});

}

