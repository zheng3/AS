/*
 * Copyright (c) 2000-2005 Regents of the University of California.
 * All rights reserved.
 *
 * This software was developed at the University of California, Irvine.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Irvine.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */
package edu.uci.isr.xarch.statecharts;

import java.util.*;

import edu.uci.isr.xarch.*;

import org.w3c.dom.*;

import edu.uci.isr.xarch.IXArch;
import edu.uci.isr.xarch.IXArchContext;

/**
 * The context interface for the statecharts package.
 * This interface is used to create objects that are used
 * in the statecharts namespace.
 *
 * @author Automatically Generated by xArch apigen
 */
public interface IStatechartsContext extends IXArchContext{

	/**
	 * Create an IStateType object in this namespace.
	 * @return New IStateType object.
	 */
	public IStateType createStateType();

	/**
	 * Brings an IStateType object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IStateType recontextualizeStateType(IStateType value);

	/**
	 * Create an IStatechart object in this namespace.
	 * @return New IStatechart object.
	 */
	public IStatechart createStatechart();

	/**
	 * Brings an IStatechart object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IStatechart recontextualizeStatechart(IStatechart value);

	/**
	 * Create an edu.uci.isr.xarch.instance.IDescription object in this namespace.
	 * @return New edu.uci.isr.xarch.instance.IDescription object.
	 */
	public edu.uci.isr.xarch.instance.IDescription createDescription();

	/**
	 * Brings an edu.uci.isr.xarch.instance.IDescription object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public edu.uci.isr.xarch.instance.IDescription recontextualizeDescription(edu.uci.isr.xarch.instance.IDescription value);

	/**
	 * Create an edu.uci.isr.xarch.instance.IXMLLink object in this namespace.
	 * @return New edu.uci.isr.xarch.instance.IXMLLink object.
	 */
	public edu.uci.isr.xarch.instance.IXMLLink createXMLLink();

	/**
	 * Brings an edu.uci.isr.xarch.instance.IXMLLink object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public edu.uci.isr.xarch.instance.IXMLLink recontextualizeXMLLink(edu.uci.isr.xarch.instance.IXMLLink value);

	/**
	 * Create an IState object in this namespace.
	 * @return New IState object.
	 */
	public IState createState();

	/**
	 * Brings an IState object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IState recontextualizeState(IState value);

	/**
	 * Create an ITransition object in this namespace.
	 * @return New ITransition object.
	 */
	public ITransition createTransition();

	/**
	 * Brings an ITransition object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public ITransition recontextualizeTransition(ITransition value);

	/**
	 * Create an IEvent object in this namespace.
	 * @return New IEvent object.
	 */
	public IEvent createEvent();

	/**
	 * Brings an IEvent object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IEvent recontextualizeEvent(IEvent value);

	/**
	 * Create an IAction object in this namespace.
	 * @return New IAction object.
	 */
	public IAction createAction();

	/**
	 * Brings an IAction object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IAction recontextualizeAction(IAction value);

	/**
	 * Create an IGuard object in this namespace.
	 * @return New IGuard object.
	 */
	public IGuard createGuard();

	/**
	 * Brings an IGuard object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IGuard recontextualizeGuard(IGuard value);

	/**
	 * Create a top-level element of type <code>IStatechart</code>.
	 * This function should be used in lieu of <code>createStatechart</code>
	 * if the element is to be added as a sub-object of <code>IXArch</code>.
	 * @return new IStatechart suitable for adding
	 * as a child of xArch.
	 */
	public IStatechart createStatechartElement();

	/**
	 * Gets the IStatechart child from the given <code>IXArch</code>
	 * element.  If there are multiple matching children, this returns the first one.
	 * @param xArch <code>IXArch</code> object from which to get the child.
	 * @return <code>IStatechart</code> that is the child
	 * of <code>xArch</code> or <code>null</code> if no such object exists.
	 */
	public IStatechart getStatechart(IXArch xArch);

	/**
	 * Gets all the IStatechart children from the given 
	 * <code>IXArch</code> element.
	 * @param xArch <code>IXArch</code> object from which to get the children.
	 * @return Collection of <code>IStatechart</code> that are 	
	 * the children of <code>xArch</code> or an empty collection if no such object exists.
	 */
	public Collection getAllStatecharts(IXArch xArch);


	public final static XArchTypeMetadata TYPE_METADATA = new XArchTypeMetadata(
		XArchTypeMetadata.XARCH_CONTEXT,
		"statecharts", null, null,
		new XArchPropertyMetadata[]{},
		new XArchActionMetadata[]{
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IStateType.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IStateType.TYPE_METADATA, IStateType.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IStatechart.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IStatechart.TYPE_METADATA, IStatechart.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, edu.uci.isr.xarch.instance.IDescription.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, edu.uci.isr.xarch.instance.IDescription.TYPE_METADATA, edu.uci.isr.xarch.instance.IDescription.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, edu.uci.isr.xarch.instance.IXMLLink.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, edu.uci.isr.xarch.instance.IXMLLink.TYPE_METADATA, edu.uci.isr.xarch.instance.IXMLLink.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IState.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IState.TYPE_METADATA, IState.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, ITransition.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, ITransition.TYPE_METADATA, ITransition.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IEvent.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IEvent.TYPE_METADATA, IEvent.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IAction.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IAction.TYPE_METADATA, IAction.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IGuard.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IGuard.TYPE_METADATA, IGuard.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE_ELEMENT, null, IStatechart.TYPE_METADATA)});

}

