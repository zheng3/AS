
<!-- saved from url=(0059)http://isr.uci.edu/projects/xarchuci/ext/javasourcecode.xsd -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css"></style></head><body><xsd:schema targetnamespace="http://www.ics.uci.edu/pub/arch/xArch/javasourcecode.xsd" xmlns:impl="http://www.ics.uci.edu/pub/arch/xArch/implementation.xsd" xmlns:archvariants="http://www.ics.uci.edu/pub/arch/xArch/variants.xsd" xmlns:archtypes="http://www.ics.uci.edu/pub/arch/xArch/types.xsd" xmlns:archinst="http://www.ics.uci.edu/pub/arch/xArch/instance.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.ics.uci.edu/pub/arch/xArch/javasourcecode.xsd" elementformdefault="qualified" attributeformdefault="qualified">

  <!-- Import namespaces used -->
  <xsd:import namespace="http://www.ics.uci.edu/pub/arch/xArch/instance.xsd" schemalocation="http://www.isr.uci.edu/projects/xarchuci/core/instance.xsd">
  <xsd:import namespace="http://www.ics.uci.edu/pub/arch/xArch/types.xsd" schemalocation="http://www.isr.uci.edu/projects/xarchuci/ext/types.xsd">
  <xsd:import namespace="http://www.ics.uci.edu/pub/arch/xArch/variants.xsd" schemalocation="http://www.isr.uci.edu/projects/xarchuci/ext/variants.xsd">
  <xsd:import namespace="http://www.ics.uci.edu/pub/arch/xArch/implementation.xsd" schemalocation="http://www.isr.uci.edu/projects/xarchuci/ext/implementation.xsd">

  <xsd:annotation>
    <xsd:documentation>
      xArch Java Source Code XML Schema 1.0
      
      This schema allows the user to specify the source code
      for a Java implementation of a component, connector,
      or interface type.

      Depends on: {types.xsd, variants.xsd, implementation.xsd,
                   javaimplementation.xsd}
        Note: The actual dependency set of this extension is
        just javaimplementation, but because of XML Schema 
        1.0's single inheritance model, we also extend variants
        so that a component/connector type may have both 
        variants and an implementation.

      Change Log:
        2004-07-16: Eric M. Dashofy [edashofy@ics.uci.edu]:
          Refactored elements to add genericity and allow
          the specification of individual source files
          and repositories.
        2004-07-10: Eugen C. Nistor [enistor@ics.uci.edu]:
          Initial development

    </xsd:documentation>
  </xsd:annotation>

  <!--
    TYPE: JavaSourceCodeManager

    The JavaSourceCodeManager type contains information 
    about an application that knows how to create and 
    maintain a link between the component, connector or 
    interface and their source code implementation
   -->
  <xsd:complextype name="JavaSourceCodeManager" abstract="true">

  <!--
    TYPE: RepositoryLocation

    A RepositoryPath is either a pathname or a url (or both)
    pointing to a repository containing source code files.
    It is intended that this may be a directory, or a pointer
    to an archive such as a .zip or .jar file.
   -->
  <xsd:complextype name="RepositoryLocation">
    <xsd:sequence>
      <xsd:element name="url" type="archinst:XMLLink" minoccurs="0" maxoccurs="1">
    </xsd:element></xsd:sequence>
    <xsd:attribute name="fileName" type="xsd:string">
    <xsd:attribute name="path" type="xsd:string">
  </xsd:attribute></xsd:attribute></xsd:complextype>

  <!--
    TYPE: JavaSourceFile
    
    The JavaSourceFile type contains the data necessary to locate
    a Java source file.  The intended semantics are that each
    source file should include at least a filename, such as
    "Foo.java".  Additionally, a 'path' attribute is provided
    to indicate where the file is located.  Also, one or more
    repositories may be references as possible locations for
    the source file.  If a repository is specified, then the
    path can be a relative path from the repository root.
    So, the repository might point to a "src.zip" file, 
    the path might be "edu/uci/ics/" and the filename 
    might be "Foo.java".
   -->
  <xsd:complextype name="JavaSourceFile">
    <xsd:sequence>
      <xsd:element name="repositoryLocation" type="RepositoryLocation" minoccurs="0" maxoccurs="unbounded">
    </xsd:element></xsd:sequence>
    <xsd:attribute name="fileName" type="xsd:string">
    <xsd:attribute name="path" type="xsd:string">
  </xsd:attribute></xsd:attribute></xsd:complextype>

  <!--
    TYPE: JavaSourceCodeImplementation

    The JavaSourceCodeImplmentation type extends
    the abstract Implementation element with information 
    about the source code for a component, connector, 
    or interface type.
    
    The intended semantics here are that the implementation
    is composed of 0 or more source code files, each of which
    (as shown above) has a path/filename and an optional
    repository.  It is also possible to specify a number
    of repositories here; the intent is that these repositories
    will be valid search locations for all the source code files
    (so you don't have to specify the same repository for all
    the source files if you don't want to).  Additionally, there
    is the option to use a source code manager (e.g. an IDE) that 
    may augment or replace the specification of individual source 
    code files here.
   -->
  <xsd:complextype name="JavaSourceCodeImplementation">
    <xsd:complexcontent>
      <xsd:extension base="impl:Implementation">
        <xsd:sequence>
          <xsd:element name="sourceCodeFile" type="JavaSourceFile" minoccurs="0" maxoccurs="unbounded">
          <xsd:element name="repositoryLocation" type="RepositoryLocation" minoccurs="0" maxoccurs="unbounded">
          <xsd:element name="sourceCodeManager" type="JavaSourceCodeManager" minoccurs="0" maxoccurs="1">
        </xsd:element></xsd:element></xsd:element></xsd:sequence>
      </xsd:extension>
    </xsd:complexcontent>
  </xsd:complextype>

</xsd:complextype></xsd:import></xsd:import></xsd:import></xsd:import></xsd:schema>
</body></html>